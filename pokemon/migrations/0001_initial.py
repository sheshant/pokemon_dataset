# Generated by Django 5.1 on 2024-09-10 15:41

import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AbilitiesTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EggGroupsTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EVYieldTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pokemon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('species', models.CharField(blank=True, max_length=200, null=True)),
                ('height', models.FloatField(null=True)),
                ('weight', models.FloatField(null=True)),
                ('growth_rate', models.CharField(blank=True, choices=[('Erratic', 'Erratic'), ('Fast', 'Fast'), ('Fluctuating', 'Fluctuating'), ('Medium Fast', 'Medium Fast'), ('Medium Slow', 'Medium Slow'), ('Slow', 'Slow')], max_length=200, null=True)),
                ('abilities', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='pokemon.AbilitiesTag', to='taggit.Tag', verbose_name='Tags')),
                ('egg_groups', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='pokemon.EggGroupsTag', to='taggit.Tag', verbose_name='Tags')),
                ('ev_yield', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='pokemon.EVYieldTag', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FileUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('file_label', models.CharField(default=None, max_length=500, null=True)),
                ('file_url', models.CharField(default=None, max_length=1000, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('pokemon', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pokemon.pokemon')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='evyieldtag',
            name='content_object',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='pokemon.pokemon'),
        ),
        migrations.AddField(
            model_name='egggroupstag',
            name='content_object',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='pokemon.pokemon'),
        ),
        migrations.AddField(
            model_name='abilitiestag',
            name='content_object',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='pokemon.pokemon'),
        ),
        migrations.CreateModel(
            name='TypeTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content_object', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='pokemon.pokemon')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(app_label)s_%(class)s_items', to='taggit.tag')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='pokemon',
            name='type',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='pokemon.TypeTag', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
